import numpy as np

from MCPM.gridradec2pix import GridRaDec2Pix


poly_x = {}
poly_y = {}
# The coeffs below come from fitting 2D polynomial of second order to WCS info 
# in TPF files. 
poly_x[(91, 30)] = np.array([277642.8375, -1113.86318265, 1787.9985768, 
    0.236717733144, -7.42780150635, -0.157826637598])
poly_y[(91, 30)] = np.array([150914.256422, -1517.34529435, -1290.30903425, 
    3.22424558711, 1.41382265331, -0.506503527612])
poly_x[(91, 31)] = np.array([236887.541626, -809.564888175, 1805.0769435, 
    -0.330080664114, -7.4689686502, -0.0525417429192])
poly_y[(91, 31)] = np.array([-162471.016825, 1608.81421231, 1190.4679193, 
    -3.38498268453, -1.24142655525, -0.450635425221])
poly_x[(91, 32)] = np.array([-392151.859325, 2002.36033911, -1604.72136458, 
    -1.93098370565, 6.66219790546, -0.237106688973])
poly_y[(91, 32)] = np.array([-154350.220411, 1560.44865712, 1303.44412622, 
    -3.31959577579, -1.70235068541, -0.642428571824])
poly_x[(91, 49)] = np.array([-347066.168294, 1634.61641873, -1690.71819605, 
    -1.22141419562, 7.00376709891, -0.132643513526])
poly_y[(91, 49)] = np.array([129483.075187, -1377.44168486, -1480.94041078, 
    3.00241976273, 2.16813184999, -0.263362558986])
poly_x[(91, 52)] = np.array([-342773.611853, 1608.20265637, -1637.89491469, 
    -1.18392614459, 6.78021149258, -0.266563795126])
poly_y[(91, 52)] = np.array([-143844.789196, 1488.85218907, 1379.99645939, 
    -3.19769595122, -1.97663739663, -0.626481128611])
poly_x[(92, 30)] = np.array([277666.963879, -1114.00444471, 1788.16800812, 
    0.236920423264, -7.42822379334, -0.157274870698])
poly_y[(92, 30)] = np.array([150899.819819, -1517.23803198, -1290.47477526, 
    3.22405123849, 1.41473053931, -0.504657747521])
poly_x[(92, 31)] = np.array([236905.52749, -809.674253736, 1805.10894086, 
    -0.329922255065, -7.46908585919, -0.0529920002992])
poly_y[(92, 31)] = np.array([-162475.103485, 1608.84474212, 1190.63834514, 
    -3.38502685517, -1.2420022645, -0.450759148992])
poly_x[(92, 32)] = np.array([-392187.404797, 2002.59892781, -1604.78361765, 
    -1.93137968288, 6.66243235361, -0.236625114525])
poly_y[(92, 32)] = np.array([-154356.001448, 1560.49292014, 1303.62373494, 
    -3.31966748488, -1.70295738328, -0.642531447823])
poly_x[(92, 49)] = np.array([-345832.368553, 1624.92484725, -1696.34110409, 
    -1.20243860447, 7.02476265745, -0.131017042671])
poly_y[(92, 49)] = np.array([129512.5018, -1377.60062895, -1480.53016387, 
    3.00253900876, 2.16549681005, -0.268546003191])
poly_x[(92, 52)] = np.array([-341630.932157, 1599.61752259, -1639.1993025, 
    -1.16781235344, 6.7848989855, -0.266691743941])
poly_y[(92, 52)] = np.array([-143707.607872, 1487.78477496, 1379.62794905, 
    -3.1956071218, -1.97512363005, -0.626106755156])

# The values below are just copied from some selected files:
#foreach f ( *.data )
  #set nn = `echo $f | awk -F"[_.]" '{print $3, $4}'`
  #grep -v "#" $f | sort -nk4 | head -1 | awk -v a=$nn[1] -v b=$nn[2] '{printf "poly_x[(%s, %s)] = np.array([%s, %s, %s, %s, %s, %s])\n", a, b, $5, $6, $7, $8, $9, $10; printf "poly_y[(%s, %s)] = np.array([%s, %s, %s, %s, %s, %s])\n", a, b, $11, $12, $13, $14, $15, $16}'
#end
poly_x[(111, 13)] = np.array([-3.2896816105e+05, 1.5409122299e+03, -1.8081722504e+03, -1.0327539808e+00, 7.5554252394e+00, 1.6139627343e-01])
poly_y[(111, 13)] = np.array([1.2935713586e+05, -1.3870110225e+03, -1.4670946002e+03, 3.0388723024e+00, 2.1449927976e+00, -2.3165900327e-01])
poly_x[(111, 16)] = np.array([-2.9480589186e+05, 1.2539409633e+03, -2.0596592381e+03, -4.7862264442e-01, 7.7523171639e+00, -3.1831717732e+00])
poly_y[(111, 16)] = np.array([-1.3780587201e+05, 1.4553952938e+03, 1.3549077817e+03, -3.1526838499e+00, -1.8480901612e+00, -3.4981922051e-01])
poly_x[(111, 22)] = np.array([1.2105004847e+05, -1.2639257430e+03, -1.3046360113e+03, 2.7656573541e+00, 1.5000588943e+00, -4.5633255053e-01])
poly_y[(111, 22)] = np.array([-3.0267851761e+05, 1.3683745574e+03, -1.5525265808e+03, -7.6133429328e-01, 6.4997703956e+00, -2.7972292574e-01])
poly_x[(111, 23)] = np.array([1.2488442871e+05, -1.2788118184e+03, -1.1480876314e+03, 2.7657285185e+00, 8.7889260644e-01, -6.0870054337e-01])
poly_y[(111, 23)] = np.array([2.6473344899e+05, -1.0680817249e+03, 1.5041387643e+03, 1.9391494837e-01, -6.4436598209e+00, -4.6583696678e-01])
poly_x[(111, 24)] = np.array([-1.6113378990e+05, 1.5740668035e+03, 1.1914556707e+03, -3.3385229752e+00, -1.1889206764e+00, -2.1977044058e-01])
poly_y[(111, 24)] = np.array([2.4030350752e+05, -8.9307661304e+02, 1.3930619665e+03, -1.1699623259e-01, -5.9900241280e+00, -2.8119371533e-01])
poly_x[(111, 2)] = np.array([1.2076046901e+05, -1.2949459877e+03, -1.4258023761e+03, 2.8498784277e+00, 1.9636721051e+00, -3.5740007183e-01])
poly_y[(111, 2)] = np.array([-3.2395307607e+05, 1.4969488310e+03, -1.6582698585e+03, -9.7814124166e-01, 6.9516273800e+00, 3.6449675073e-02])
poly_x[(111, 33)] = np.array([-3.1380552563e+05, 1.4568473903e+03, -1.7272870153e+03, -8.8897485453e-01, 7.3504627091e+00, 5.8524052465e-01])
poly_y[(111, 33)] = np.array([1.2844927996e+05, -1.3680109679e+03, -1.3592230765e+03, 2.9841936404e+00, 1.8088134382e+00, 7.0991130096e-02])
poly_x[(111, 34)] = np.array([2.8891311417e+05, -1.2308666039e+03, 1.8936411626e+03, 4.2625393617e-01, -7.8976494052e+00, -1.8338196516e-01])
poly_y[(111, 34)] = np.array([1.1013339807e+05, -1.2206927700e+03, -1.2815050050e+03, 2.6825550784e+00, 1.4033229438e+00, -4.0737238204e-01])
poly_x[(111, 35)] = np.array([2.4775485073e+05, -9.3265720503e+02, 1.7551851881e+03, -1.1574137227e-01, -7.4276767502e+00, -4.3780504417e-01])
poly_y[(111, 35)] = np.array([-1.9361099342e+05, 1.8015934613e+03, 6.3834521296e+02, -3.6837257768e+00, 5.0322387092e-01, -1.9676126627e+00])
poly_x[(111, 54)] = np.array([2.7617205836e+05, -1.1489793789e+03, 1.9179250129e+03, 2.6384474983e-01, -7.9394150075e+00, 1.0151986421e-01])
poly_y[(111, 54)] = np.array([1.5847956851e+05, -1.5812262923e+03, -1.1928032470e+03, 3.3590389034e+00, 1.1503263654e+00, -1.3409223670e-02])

#poly_x[(111, 2)] = np.array([1.2076046901e+05, -1.2949459877e+03, -1.4258023761e+03, 2.8498784277e+00, 1.9636721051e+00, -3.5740007183e-01])
#poly_y[(111, 2)] = np.array([-3.2395307607e+05, 1.4969488310e+03, -1.6582698585e+03, -9.7814124166e-01, 6.9516273800e+00, 3.6449675073e-02])
#poly_x[(111, 23)] = np.array([1.2488442871e+05, -1.2788118184e+03, -1.1480876314e+03, 2.7657285185e+00, 8.7889260644e-01, -6.0870054337e-01]) 
#poly_y[(111, 23)] = np.array([2.6473344899e+05, -1.0680817249e+03, 1.5041387643e+03, 1.9391494837e-01, -6.4436598209e+00, -4.6583696678e-01])


class TpfGrid(object):
    """Grid transformation that is fitted to WCS information in the TPF files"""
    def __init__(self, campaign, channel):
        args = (campaign, channel)
        self._grid = GridRaDec2Pix(poly_x[args], poly_y[args])

    def apply_grid(self, ra, dec):
        """calculate pixel coordinates for given (RA,Dec) which can be floats, lists, or numpy.arrays"""
        return self._grid.apply_grid(ra=ra, dec=dec)
    
    def apply_grid_single(self, ra, dec):
        """calculate pixel coordinates for a single sky position (RA,Dec)"""
        return self._grid.apply_grid_single(ra=ra, dec=dec)
    
